{"version":3,"sources":["webpack://naver-design-gatsby/./src/components/mdxComponents/LinkSecond.js"],"names":["LinkSecondWrapper","config","LinkSecondContent","LinkIcon","LinkTextWrapper","LinkTextFirst","LinkTextSecondWrapper","LinkTextSecond","LinkTextSecondSVG","LinkSecondMobile","props","propsLength","Object","keys","length","newArray","i","sliced","slice","reduce","result","key","push","renamedArray","map","el","altObj","fromEntries","entries","value","finalArrayTwo","Math","ceil","finalArrayOne","undefined","href","link","target","width","height","viewBox","fill","xmlns","cx","cy","r","d","stroke","title","text"],"mappings":"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","file":"7c2f3545-8d4cf7dfe4118bdc19d6.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport config from '../../../config';\r\n\r\nconst LinkSecondWrapper = styled('div')`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  column-gap: 24px;\r\n  margin-top: 16px;\r\n\r\n  @media (min-width: ${config.responsive.tabletMin}px) and (max-width: ${config.responsive\r\n      .tabletMax}px) {\r\n    column-gap: 18px;\r\n  }\r\n\r\n  @media (max-width: ${config.responsive.mobileMax}px) {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst LinkSecondContent = styled('div')`\r\n  width: 100%;\r\n  height: 80px;\r\n  background-color: #fff;\r\n  border: 1px solid #e2e2e2;\r\n  border-radius: 4px;\r\n  display: grid;\r\n  grid-template-columns: 80px 1fr;\r\n  margin-top: 16px;\r\n\r\n  &:hover {\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\n\r\nconst LinkIcon = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  a {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst LinkTextWrapper = styled('div')`\r\n  display: block;\r\n  align-self: center;\r\n`;\r\n\r\nconst LinkTextFirst = styled('div')`\r\n  a {\r\n    text-decoration: solid underline #d1d1d1 !important;\r\n    text-underline-position: under;\r\n    font-family: 'SF Pro Text';\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 130%;\r\n    letter-spacing: -0.017em;\r\n    color: #131313;\r\n  }\r\n`;\r\n\r\nconst LinkTextSecondWrapper = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst LinkTextSecond = styled('div')`\r\n  a {\r\n    text-decoration: none !important;\r\n    font-family: 'SF Pro Text';\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    letter-spacing: -0.017em;\r\n    color: #636363;\r\n  }\r\n  span {\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nconst LinkTextSecondSVG = styled('div')`\r\n  display: inline-block;\r\n`;\r\n\r\nconst LinkSecondMobile = styled('div')`\r\n  display: none;\r\n\r\n  @media (max-width: ${config.responsive.mobileMax}px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst LinkSecond = (props) => {\r\n  let propsLength = 0;\r\n  if (props) propsLength = Object.keys(props).length;\r\n\r\n  if (propsLength !== 0 && propsLength % 3 === 0) {\r\n    let newArray = [];\r\n\r\n    // Markdown에서 받아온 인자(object type)를 array로 변환\r\n    for (let i = 0; i < propsLength / 3; i++) {\r\n      let sliced = Object.keys(props)\r\n        .slice(3 * i, 3 * i + 3)\r\n        .reduce((result, key) => {\r\n          result[key] = props[key];\r\n          return result;\r\n        }, {});\r\n\r\n      newArray.push(sliced);\r\n    }\r\n\r\n    let renamedArray = [];\r\n    newArray.map((el) => {\r\n      let altObj = Object.fromEntries(\r\n        Object.entries(el).map(([key, value]) => [key.slice(0, -1), value])\r\n      );\r\n      renamedArray.push(altObj);\r\n    });\r\n\r\n    let finalArrayTwo = [];\r\n    for (let i = 0; i < Math.ceil(renamedArray.length / 2); i++) {\r\n      let sliced = renamedArray.slice(2 * i, 2 * i + 2);\r\n      finalArrayTwo.push(sliced);\r\n    }\r\n\r\n    let finalArrayOne = [];\r\n    for (let i = 0; i < renamedArray.length; i++) {\r\n      let sliced = renamedArray.slice(i, i + 1);\r\n      finalArrayOne.push(sliced);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {finalArrayTwo.map((el, key) => {\r\n          return (\r\n            <LinkSecondWrapper key={key}>\r\n              {el[0] === undefined ? (\r\n                <div />\r\n              ) : (\r\n                <LinkSecondContent>\r\n                  <LinkIcon>\r\n                    <a href={el[0].link} target=\"_blank\">\r\n                      <svg\r\n                        width=\"40\"\r\n                        height=\"40\"\r\n                        viewBox=\"0 0 40 40\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#424242\" />\r\n                        <path\r\n                          d=\"M20.3181 22.0091C19.8064 21.8081 19.325 21.5018 18.9129 21.0879C17.3134 19.4893 17.3134 16.8972 18.9129 15.2996L21.0125 13.1991C22.6115 11.6005 25.2027 11.6001 26.8021 13.1991C28.4007 14.7972 28.4007 17.3893 26.8021 18.9888L24.1654 21.6237\"\r\n                          stroke=\"white\"\r\n                        />\r\n                        <path\r\n                          d=\"M19.6836 17.9912C20.1953 18.1917 20.6753 18.4994 21.0884 18.9119C22.6874 20.5096 22.6874 23.1017 21.0884 24.6998L18.9884 26.8007C17.3889 28.3997 14.7982 28.3997 13.1996 26.8007C11.6001 25.2026 11.6001 22.611 13.1996 21.0124L15.8363 18.3752\"\r\n                          stroke=\"white\"\r\n                        />\r\n                      </svg>\r\n                    </a>\r\n                  </LinkIcon>\r\n                  <LinkTextWrapper>\r\n                    <LinkTextFirst>\r\n                      <a href={el[0].link} target=\"_blank\">\r\n                        {el[0].title && <span> {el[0].title}</span>}\r\n                      </a>\r\n                    </LinkTextFirst>\r\n                    <LinkTextSecondWrapper>\r\n                      <LinkTextSecond>\r\n                        <a href={el[0].link} target=\"_blank\">\r\n                          {el[0].text && <span> {el[0].text}</span>}\r\n                        </a>\r\n                      </LinkTextSecond>\r\n                      <LinkTextSecondSVG>\r\n                        <a href={el[0].link} target=\"_blank\">\r\n                          <svg\r\n                            width=\"12\"\r\n                            height=\"12\"\r\n                            viewBox=\"0 0 12 12\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M9.5 2.99868L9.5 2.5H9.00009C9.00014 2.5 9.00003 2.5 9.00009 2.5H3.42888C3.15274 2.5 2.92888 2.72386 2.92888 3C2.92888 3.27614 3.15274 3.5 3.42888 3.5H7.79289L2.64645 8.64645C2.45118 8.84171 2.45118 9.15829 2.64645 9.35355C2.84171 9.54882 3.15829 9.54882 3.35355 9.35355L8.49999 4.20711L8.49998 8.57143C8.49998 8.84757 8.72383 9.07143 8.99998 9.07143C9.27612 9.07143 9.49998 8.84757 9.49998 8.57143L9.5 3.00133C9.5 3.00044 9.5 2.99956 9.5 2.99868Z\"\r\n                              fill=\"#636363\"\r\n                            />\r\n                          </svg>\r\n                        </a>\r\n                      </LinkTextSecondSVG>\r\n                    </LinkTextSecondWrapper>\r\n                  </LinkTextWrapper>\r\n                </LinkSecondContent>\r\n              )}\r\n              {el[1] === undefined ? (\r\n                <div />\r\n              ) : (\r\n                <LinkSecondContent>\r\n                  <LinkIcon>\r\n                    <a href={el[1].link} target=\"_blank\">\r\n                      <svg\r\n                        width=\"40\"\r\n                        height=\"40\"\r\n                        viewBox=\"0 0 40 40\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#424242\" />\r\n                        <path\r\n                          d=\"M20.3181 22.0091C19.8064 21.8081 19.325 21.5018 18.9129 21.0879C17.3134 19.4893 17.3134 16.8972 18.9129 15.2996L21.0125 13.1991C22.6115 11.6005 25.2027 11.6001 26.8021 13.1991C28.4007 14.7972 28.4007 17.3893 26.8021 18.9888L24.1654 21.6237\"\r\n                          stroke=\"white\"\r\n                        />\r\n                        <path\r\n                          d=\"M19.6836 17.9912C20.1953 18.1917 20.6753 18.4994 21.0884 18.9119C22.6874 20.5096 22.6874 23.1017 21.0884 24.6998L18.9884 26.8007C17.3889 28.3997 14.7982 28.3997 13.1996 26.8007C11.6001 25.2026 11.6001 22.611 13.1996 21.0124L15.8363 18.3752\"\r\n                          stroke=\"white\"\r\n                        />\r\n                      </svg>\r\n                    </a>\r\n                  </LinkIcon>\r\n                  <LinkTextWrapper>\r\n                    <LinkTextFirst>\r\n                      <a href={el[1].link} target=\"_blank\">\r\n                        {el[1].title && <span> {el[1].title}</span>}\r\n                      </a>\r\n                    </LinkTextFirst>\r\n                    <LinkTextSecondWrapper>\r\n                      <LinkTextSecond>\r\n                        <a href={el[1].link} target=\"_blank\">\r\n                          {el[1].text && <span> {el[1].text}</span>}\r\n                        </a>\r\n                      </LinkTextSecond>\r\n                      <LinkTextSecondSVG>\r\n                        <a href={el[1].link} target=\"_blank\">\r\n                          <svg\r\n                            width=\"12\"\r\n                            height=\"12\"\r\n                            viewBox=\"0 0 12 12\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M9.5 2.99868L9.5 2.5H9.00009C9.00014 2.5 9.00003 2.5 9.00009 2.5H3.42888C3.15274 2.5 2.92888 2.72386 2.92888 3C2.92888 3.27614 3.15274 3.5 3.42888 3.5H7.79289L2.64645 8.64645C2.45118 8.84171 2.45118 9.15829 2.64645 9.35355C2.84171 9.54882 3.15829 9.54882 3.35355 9.35355L8.49999 4.20711L8.49998 8.57143C8.49998 8.84757 8.72383 9.07143 8.99998 9.07143C9.27612 9.07143 9.49998 8.84757 9.49998 8.57143L9.5 3.00133C9.5 3.00044 9.5 2.99956 9.5 2.99868Z\"\r\n                              fill=\"#636363\"\r\n                            />\r\n                          </svg>\r\n                        </a>\r\n                      </LinkTextSecondSVG>\r\n                    </LinkTextSecondWrapper>\r\n                  </LinkTextWrapper>\r\n                </LinkSecondContent>\r\n              )}\r\n            </LinkSecondWrapper>\r\n          );\r\n        })}\r\n\r\n        {finalArrayOne.map((el, key) => {\r\n          return (\r\n            <LinkSecondMobile key={key}>\r\n              {el[0] === undefined ? (\r\n                <div />\r\n              ) : (\r\n                <LinkSecondContent>\r\n                  <LinkIcon>\r\n                    <a href={el[0].link} target=\"_blank\">\r\n                      <svg\r\n                        width=\"40\"\r\n                        height=\"40\"\r\n                        viewBox=\"0 0 40 40\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#424242\" />\r\n                        <path\r\n                          d=\"M20.3181 22.0091C19.8064 21.8081 19.325 21.5018 18.9129 21.0879C17.3134 19.4893 17.3134 16.8972 18.9129 15.2996L21.0125 13.1991C22.6115 11.6005 25.2027 11.6001 26.8021 13.1991C28.4007 14.7972 28.4007 17.3893 26.8021 18.9888L24.1654 21.6237\"\r\n                          stroke=\"white\"\r\n                        />\r\n                        <path\r\n                          d=\"M19.6836 17.9912C20.1953 18.1917 20.6753 18.4994 21.0884 18.9119C22.6874 20.5096 22.6874 23.1017 21.0884 24.6998L18.9884 26.8007C17.3889 28.3997 14.7982 28.3997 13.1996 26.8007C11.6001 25.2026 11.6001 22.611 13.1996 21.0124L15.8363 18.3752\"\r\n                          stroke=\"white\"\r\n                        />\r\n                      </svg>\r\n                    </a>\r\n                  </LinkIcon>\r\n                  <LinkTextWrapper>\r\n                    <LinkTextFirst>\r\n                      <a href={el[0].link} target=\"_blank\">\r\n                        {el[0].title && <span> {el[0].title}</span>}\r\n                      </a>\r\n                    </LinkTextFirst>\r\n                    <LinkTextSecondWrapper>\r\n                      <LinkTextSecond>\r\n                        <a href={el[0].link} target=\"_blank\">\r\n                          {el[0].text && <span> {el[0].text}</span>}\r\n                        </a>\r\n                      </LinkTextSecond>\r\n                      <LinkTextSecondSVG>\r\n                        <a href={el[0].link} target=\"_blank\">\r\n                          <svg\r\n                            width=\"12\"\r\n                            height=\"12\"\r\n                            viewBox=\"0 0 12 12\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M9.5 2.99868L9.5 2.5H9.00009C9.00014 2.5 9.00003 2.5 9.00009 2.5H3.42888C3.15274 2.5 2.92888 2.72386 2.92888 3C2.92888 3.27614 3.15274 3.5 3.42888 3.5H7.79289L2.64645 8.64645C2.45118 8.84171 2.45118 9.15829 2.64645 9.35355C2.84171 9.54882 3.15829 9.54882 3.35355 9.35355L8.49999 4.20711L8.49998 8.57143C8.49998 8.84757 8.72383 9.07143 8.99998 9.07143C9.27612 9.07143 9.49998 8.84757 9.49998 8.57143L9.5 3.00133C9.5 3.00044 9.5 2.99956 9.5 2.99868Z\"\r\n                              fill=\"#636363\"\r\n                            />\r\n                          </svg>\r\n                        </a>\r\n                      </LinkTextSecondSVG>\r\n                    </LinkTextSecondWrapper>\r\n                  </LinkTextWrapper>\r\n                </LinkSecondContent>\r\n              )}\r\n            </LinkSecondMobile>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <span>invalid arguments</span>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LinkSecond;\r\n"],"sourceRoot":""}